<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:basic="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit"
                    xmlns:primitives="clr-namespace:Microsoft.Windows.Controls.Primitives;assembly=WPFToolkit"
                    xmlns:vsm="clr-namespace:System.Windows;assembly=WPFToolkit">

    <!--KLEUREN-->
    <SolidColorBrush x:Key="Blue" Color="#36495b"/>
    <SolidColorBrush x:Key="DarkBlue" Color="#343f4b"/>
    <SolidColorBrush x:Key="DarkBlue:hover" Color="#CC343F4B"/>
    <SolidColorBrush x:Key="White" Color="#CCFFFFFF"/>
    <SolidColorBrush x:Key="background" Color="#f5f7f8"/>


    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#343f4b" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#343f4b" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="White" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#343f4b" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#343f4b" />



    <Color x:Key="cDarkBlue">#343f4b</Color>
    <Color x:Key="cDarkBlue:hover">#CC343F4B</Color>
    <Color x:Key="cWhite">#CCFFFFFF</Color>

    <!--STANDAARD STYLES-->
    <Style TargetType="Window">
        <Setter Property="FontFamily" Value="/nmct.ba.cashlessproject.ui;component/Themes/Fonts/#Raleway"/>
    </Style>
    <Style TargetType="UserControl">
        <Setter Property="FontFamily" Value="/nmct.ba.cashlessproject.ui;component/Themes/Fonts/#Raleway"/>
    </Style>    
    <Style TargetType="TextBox">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,8,0,8" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,8,0,8" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
    </Style>


    <Style TargetType="Label">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Padding" Value="10,8,0,8" />

    </Style>

    <Style x:Key="button" TargetType="Button">
        <Setter Property="Background" Value="#00FFFFFF"/>
        <Setter Property="BorderBrush" Value="#15FFFFFF"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="/PaymentSystem;component/Fonts/#Raleway"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="menu_border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Background" Value="White"/>-->
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)" From="1" To="1" Duration="0:0:.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)" From="1" To="1" Duration="0:0:.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource DarkBlue}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Background" Value="White"/>-->
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)" From="1" To="0.8" Duration="0:0:.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)" From="0.8" To="1" Duration="0:0:.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="button:light" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Gainsboro"/>
        <Setter Property="Foreground" Value="Black"/>

    </Style>
    <Style x:Key="button:gray" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="#FF7B838B"/>
        <Setter Property="Foreground" Value="White"/>

    </Style>

    <!--LOGIN-->
    <Style x:Key="login_textblock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>
    <Style x:Key="login_textbox" TargetType="TextBox">
        <Setter Property="Padding" Value="10,8,0,8" />
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="20,20,20,10"/>
    </Style>
    <Style x:Key="pass_textbox" TargetType="PasswordBox">
        <Setter Property="Padding" Value="10,8,0,8" />
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="20,10,20,10"/>
    </Style>

    <Style x:Key="login_button" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource White}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Content" Value="Login"/>
        <Setter Property="Cursor" Value="Hand"/>

    </Style>


    <!--MENU-->
    <Style x:Key="menu_label" TargetType="Label">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="/PaymentSystem;component/Fonts/#Raleway"/>
        <Setter Property="FontWeight" Value="Light"/>
    </Style>
    <Style x:Key="menu_button" TargetType="Button">
        <Setter Property="Background" Value="#00FFFFFF"/>
        <Setter Property="BorderBrush" Value="#15FFFFFF"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="FontFamily" Value="/PaymentSystem;component/Fonts/#Raleway"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="menu_border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Canvas Height="{TemplateBinding Height}" Name="mainCanvas" VerticalAlignment="Center">
                            <ContentPresenter Canvas.Left="0" VerticalAlignment="Center" Height="{TemplateBinding Height}" />
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="true" >
                <!--<Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" BeginTime="00:00:00">
                                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,0" />
                                <SplineThicknessKeyFrame KeyTime="00:00:0.2" Value="10,0,0,0" />
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" BeginTime="00:00:00">
                                <SplineThicknessKeyFrame KeyTime="00:00:00" Value="10,0,0,0" />
                                <SplineThicknessKeyFrame KeyTime="00:00:0.2" Value="0,0,0,0" />
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>-->
            </Trigger>
        </Style.Triggers>



    </Style>
    <Style x:Key="border" TargetType="Border">
        <Setter Property="BorderBrush" Value="#15FFFFFF"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
    </Style>
    <Style x:Key="logo" TargetType="Button" BasedOn="{StaticResource menu_button}">
        <Setter Property="Height" Value="80"/>
        <Setter Property="Background"  Value="#10FFFFFF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  Background="{TemplateBinding Background}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--GRID-->
    <Style x:Key="label_pagina" TargetType="Label">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="auto"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>
    <Style x:Key="label_items" TargetType="Label">
        <Setter Property="Margin" Value="20,4,20,4"/>
        <Setter Property="Height" Value="30"/>
    </Style>


    <!--normal-->
    <Style x:Key="textblock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>

    <!--EDIT button-->
    <Style x:Key="edit" TargetType="Button" BasedOn="{StaticResource menu_button}">
        <Setter Property="Background"  Value="#10FFFFFF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  Background="{TemplateBinding Background}">
                        <Image Source="images/edit.png" MaxHeight="25"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="delete" TargetType="Button" BasedOn="{StaticResource menu_button}">
        <Setter Property="Background"  Value="#10FFFFFF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  Background="{TemplateBinding Background}">
                        <Image Source="images/delete.png" MaxHeight="25"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="min" TargetType="Button" BasedOn="{StaticResource menu_button}">
        <Setter Property="Background"  Value="#10FFFFFF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  Background="{TemplateBinding Background}">
                        <Image Source="images/delete.png" MaxHeight="25"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="plus" TargetType="Button" BasedOn="{StaticResource menu_button}">
        <Setter Property="Background"  Value="#10FFFFFF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  Background="{TemplateBinding Background}">
                        <Image Source="images/delete.png" MaxHeight="25"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!--CANCEL BUTTON-->
    <Style x:Key="cancel" TargetType="Button">
        <Setter Property="Background"  Value="#FFDCDCDC"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Background" Value="White"/>-->
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)" From="1" To="0.8" Duration="0:0:.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)" From="0.8" To="1" Duration="0:0:.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="eid" TargetType="Button" BasedOn="{StaticResource menu_button}">
        <Setter Property="Background"  Value="#10FFFFFF"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  Background="{TemplateBinding Background}">
                        <Image Source="images/id.png" MaxHeight="40"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <!--DATA-->


    <Style x:Key="data_border" TargetType="Border">
        <Setter Property="BorderBrush" Value="#FFEEEEEE"/>
        <Setter Property="BorderThickness" Value="0,0,0,1.5"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Label.FontSize" Value="12"/>
        <Setter Property="Label.Height" Value="auto"/>
    </Style>

    <Style x:Key="data_border_top" TargetType="Border" BasedOn="{StaticResource data_border}">
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Background" Value="#FFEEEEEE"/>
        <Setter Property="Label.FontSize" Value="14"/>
        <Setter Property="Label.Height" Value="auto"/>
    </Style>

    <Style x:Key="data_border:kassa" TargetType="Border" BasedOn="{StaticResource data_border}">
        <Setter Property="BorderBrush" Value="#FFEEEEEE"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Label.Foreground" Value="Black"/>
    </Style>
    <Style x:Key="data_border_top:kassa" TargetType="Border" BasedOn="{StaticResource data_border_top}">
        <Setter Property="Background" Value="#ECEFF1"/>
        <Setter Property="Label.Foreground" Value="White"/>
    </Style>

    <ControlTemplate x:Key="ErrorTemplate">
        <StackPanel HorizontalAlignment="Stretch">
            <TextBlock HorizontalAlignment="Right" Foreground="Red" Text="{Binding [0].ErrorContent}" Margin="0,5,0,5"/>
            <Grid HorizontalAlignment="Stretch">
                <Image Source="images/error.png" MaxHeight="30" Margin="0,10,10,0" HorizontalAlignment="Right"/>
                <AdornedElementPlaceholder/>
            </Grid>

        </StackPanel>
    </ControlTemplate>
</ResourceDictionary>